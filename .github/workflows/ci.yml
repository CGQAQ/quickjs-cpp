name: QuickJS-CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CMAKE_GENERATOR: Ninja

jobs:
  check_format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install clang-tidy
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 14 all
      - name: Check format
        run: |
          clang-format-14 -style=file -i src/*.{cpp,hpp}
          git diff --exit-code

  #  clang tidy is not support c++23 well
  #  temporarily disable it
  #  check_lint:
  #    runs-on: ubuntu-22.04
  #    steps:
  #      - uses: actions/checkout@v3
  #      - name: Install clang-tidy
  #        run: |
  #          wget https://apt.llvm.org/llvm.sh
  #          chmod +x llvm.sh
  #          sudo ./llvm.sh 14 all
  #      - name: Upgrade GCC
  #        run: |
  #          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y
  #          sudo apt-get update -y
  #          sudo apt-get install gcc-12 g++-12 -y
  #          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
  #          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 50
  #      - name: Check lint
  #        run: |
  #          clang-tidy-14 --version
  #          clang-tidy-14 src/*.cpp src/*.hpp -extra-arg="-std=gnu++2b"

  build:
    strategy:
      matrix:
        os: [ windows-latest, ubuntu-22.04, macos-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - uses: ilammy/msvc-dev-cmd@v1
        if: matrix.os == 'windows-latest'
        with:
          arch: x64
          vs_version: 2022
      - name: Upgrade GCC(Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y
          sudo apt-get update -y
          sudo apt-get install gcc-12 g++-12 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-12 50
      - name: Configure using CMake (!Windows)
        if: runner.os != 'Windows'
        env:
          CC: gcc-12
          CXX: g++-12
        run: |
          mkdir build
          cd build
          cmake -G "${{ env.CMAKE_GENERATOR }}" ..
      - name: Configure using CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          . "C:\Program Files (x86)\Microsoft Visual Studio\Installer\vswhere.exe" /property catalog_productDisplayVersion
          mkdir build
          cd build
          cmake -G "${{ env.CMAKE_GENERATOR }}" ..
      - name: Build
        run: |
          cd build
          cmake --build . --config Release 
