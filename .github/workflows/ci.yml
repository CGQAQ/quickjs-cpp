name: QuickJS-CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CMAKE_GENERATOR: Ninja

jobs:
  check_format:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install clang-tidy
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 15 all
      - name: Check format
        run: |
          clang-format-15 -style=file -i src/*.{cpp,hpp}
          git diff --exit-code

  check_lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - name: Install clang-tidy
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 15 all
      - name: Upgrade GCC
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/ppa -y
          sudo apt-get update -y
          sudo apt-get install gcc-12 -y
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 50
      - name: Check lint
        run: |
          clang-tidy-15 --version
          clang-tidy-15 src/*.cpp src/*.hpp -extra-arg="-std=c++2b"

  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-22.04, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: seanmiddleditch/gha-setup-ninja@master
      - name: Set up GCC
        if: runner.os == 'Linux'
        uses: egor-tensin/setup-gcc@v1
        with:
          version: latest
          platform: x64
      - name: Configure using CMake (!Windows)
        if: runner.os != 'Windows'
        env:
          CC: gcc-12
          CXX: g++-12
        run: |
          mkdir build
          cd build
          cmake -G "${{ env.CMAKE_GENERATOR }}" ..
      - name: Configure using CMake (Windows)
        if: runner.os == 'Windows'
        run: |
          mkdir build
          cd build
          cmake -G "${{ env.CMAKE_GENERATOR }}" ..
      - name: Build
        run: |
          cmake --build . --config Release
